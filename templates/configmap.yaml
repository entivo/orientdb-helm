apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.orientdbConfigMapName }}
  namespace: {{ .Values.namespace }}
data:
  hazelcast.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- ~ Copyright (c) 2008-2012, Hazel Bilisim Ltd. All Rights Reserved. ~
    	~ Licensed under the Apache License, Version 2.0 (the "License"); ~ you may
    	not use this file except in compliance with the License. ~ You may obtain
    	a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~
    	~ Unless required by applicable law or agreed to in writing, software ~ distributed
    	under the License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES
    	OR CONDITIONS OF ANY KIND, either express or implied. ~ See the License for
    	the specific language governing permissions and ~ limitations under the License. -->

    <hazelcast
    		xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-3.10.xsd"
    		xmlns="http://www.hazelcast.com/schema/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    	<group>
    		<name>orientdb</name>
    		<password>orientdb</password>
    	</group>
    	<properties>
    		<property name="hazelcast.phone.home.enabled">false</property>
    		<property name="hazelcast.mancenter.enabled">false</property>
    		<property name="hazelcast.memcache.enabled">false</property>
    		<property name="hazelcast.rest.enabled">false</property>
    		<property name="hazelcast.wait.seconds.before.join">5</property>
    		<property name="hazelcast.operation.thread.count">1</property>
    		<property name="hazelcast.io.thread.count">1</property>
    		<property name="hazelcast.operation.generic.thread.count">1</property>
    		<property name="hazelcast.client.event.thread.count">1</property>
    		<property name="hazelcast.event.thread.count">1</property>
    		<property name="hazelcast.heartbeat.interval.seconds">5</property>
    		<property name="hazelcast.max.no.heartbeat.seconds">30</property>
    		<property name="hazelcast.merge.next.run.delay.seconds">15</property>
    	</properties>
    	<network>
    		<port auto-increment="true">{{ .Values.hazelcastPort }}</port>
    		<join>
    			<kubernetes enabled="true">
                   <pod-label-name>{{ .Values.hazelcastDiscovery.podLabel.name }}</pod-label-name>
                   <pod-label-value>{{ .Values.hazelcastDiscovery.podLabel.value }}</pod-label-value>
                   <service-port>{{ .Values.hazelcastPort }}</service-port>
                   <namespace>{{ .Values.namespace }}</namespace>
                </kubernetes>
                <multicast enabled="false">
                </multicast>
    		</join>
    	</network>
    	<executor-service>
    		<pool-size>16</pool-size>
    	</executor-service>
    </hazelcast>

  default-distributed-db-config.json: |
    {
      "autoDeploy": true,
      "readQuorum": 1,
      "writeQuorum": "majority",
      "readYourWrites": true,
      "newNodeStrategy": "dynamic",
      "servers": {
        "*": "master"
      },
      "clusters": {
        "internal": {
        },
        "*": {
          "servers": ["<NEW_NODE>"]
        }
      }
    }

  orientdb-server-config.xml: |
    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <orient-server>
        <handlers>
            <handler class="com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin">
                <parameters>
                    <!-- <parameter name="nodeName" value="europe1" /> -->
                    <parameter name="enabled" value="${distributed}"/>
                    <parameter name="configuration.db.default"
                               value="${ORIENTDB_HOME}/config/default-distributed-db-config.json"/>
                    <parameter name="configuration.hazelcast" value="${ORIENTDB_HOME}/config/hazelcast.xml"/>
                </parameters>
            </handler>
            <!-- JMX SERVER, TO TURN ON SET THE 'ENABLED' PARAMETER TO 'true' -->
            <handler class="com.orientechnologies.orient.server.handler.OJMXPlugin">
                <parameters>
                    <parameter name="enabled" value="false"/>
                    <parameter name="profilerManaged" value="true"/>
                </parameters>
            </handler>
            <!-- SERVER SIDE SCRIPT INTERPRETER. WARNING, THIS CAN BE A SECURITY HOLE BECAUSE MALICIOUS CODE COULD BE INJECTED.
                ENABLE IT ONLY IF CLIENTS ARE TRUSTED, TO TURN ON SET THE 'ENABLED' PARAMETER TO 'true' -->
            <handler
                    class="com.orientechnologies.orient.server.handler.OServerSideScriptInterpreter">
                <parameters>
                    <parameter name="enabled" value="true"/>
                    <parameter name="allowedLanguages" value="SQL"/>
                    <!--  Comma separated packages  allowed in JS scripts eg. java.math.*, java.util.ArrayList -->
                    <parameter name="allowedPackages" value=""/>
                </parameters>
            </handler>

        </handlers>
        <network>
            <sockets>
                <socket implementation="com.orientechnologies.orient.server.network.OServerTLSSocketFactory" name="ssl">
                    <parameters>
                        <parameter value="false" name="network.ssl.clientAuth"/>
                        <parameter value="config/cert/orientdb.ks" name="network.ssl.keyStore"/>
                        <parameter value="password" name="network.ssl.keyStorePassword"/>
                        <parameter value="config/cert/orientdb.ks" name="network.ssl.trustStore"/>
                        <parameter value="password" name="network.ssl.trustStorePassword"/>
                    </parameters>
                </socket>
                <socket implementation="com.orientechnologies.orient.server.network.OServerTLSSocketFactory" name="https">
                    <parameters>
                        <parameter value="false" name="network.ssl.clientAuth"/>
                        <parameter value="config/cert/orientdb.ks" name="network.ssl.keyStore"/>
                        <parameter value="password" name="network.ssl.keyStorePassword"/>
                        <parameter value="config/cert/orientdb.ks" name="network.ssl.trustStore"/>
                        <parameter value="password" name="network.ssl.trustStorePassword"/>
                    </parameters>
                </socket>
            </sockets>
            <protocols>
                <!-- Default registered protocol. It reads commands using the HTTP protocol
                    and write data locally -->
                <protocol name="binary"
                          implementation="com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary"/>
                <protocol name="http"
                          implementation="com.orientechnologies.orient.server.network.protocol.http.ONetworkProtocolHttpDb"/>
            </protocols>
            <listeners>
                <listener protocol="binary" ip-address="0.0.0.0" port-range="2424-2430" socket="default"/>
                <listener protocol="http" ip-address="0.0.0.0" port-range="2480-2490" socket="default">
                    <parameters>
                        <!-- Connection's custom parameters. If not specified the global configuration
                            will be taken -->
                        <parameter name="network.http.charset" value="utf-8"/>
                        <parameter value="true" name="network.http.jsonResponseError"/>
                        <parameter value="Content-Security-Policy: frame-ancestors 'none'" name="network.http.additionalResponseHeaders"></parameter>
                        <!-- Define additional HTTP headers to always send as response -->
                        <!-- Allow cross-site scripting -->
                        <!-- parameter name="network.http.additionalResponseHeaders" value="Access-Control-Allow-Origin:
                            *;Access-Control-Allow-Credentials: true" / -->
                    </parameters>
                    <commands>
                        <command
                                pattern="GET|www GET|studio/ GET| GET|*.htm GET|*.html GET|*.xml GET|*.jpeg GET|*.jpg GET|*.png GET|*.gif GET|*.js GET|*.css GET|*.swf GET|*.ico GET|*.txt GET|*.otf GET|*.pjs GET|*.svg GET|*.json GET|*.woff GET|*.woff2 GET|*.ttf GET|*.svgz"
                                implementation="com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetStaticContent">
                            <parameters>
                                <!-- Don't cache html resources in development mode -->
                                <entry name="http.cache:*.htm *.html"
                                       value="Cache-Control: no-cache, no-store, max-age=0, must-revalidate\r\nPragma: no-cache"/>
                                <!-- Default caching -->
                                <entry name="http.cache:default" value="Cache-Control: max-age=120"/>
                            </parameters>
                        </command>
                        <command pattern="GET|gephi/*"
                                 implementation="com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetGephi"/>

                    </commands>
                </listener>
            </listeners>
            <cluster>
            </cluster>
        </network>
        <storages>
        </storages>
        <users>
          {{- if .Values.createRootUser -}}
          <user resources="*" password="{{ .Values.rootPassword }}" name="root"/>
          {{- end -}}
        </users>
        <properties>
            <!-- PROFILER: configures the profiler as <seconds-for-snapshot>,<archive-snapshot-size>,<summary-size> -->
            <entry name="profiler.enabled" value="false"/>
            <!-- <entry name="profiler.config" value="30,10,10" /> -->
        </properties>
    </orient-server>

  orientdb-server-log.properties: |
    # Specify the handlers to create in the root logger
    # (all loggers are children of the root logger)
    # The following creates two handlers
    handlers = java.util.logging.ConsoleHandler, java.util.logging.FileHandler

    # Set the default logging level for the root logger
    .level = INFO
    com.orientechnologies.level = INFO
    com.orientechnologies.orient.server.distributed.level = INFO

    # Set the default logging level for new ConsoleHandler instances
    java.util.logging.ConsoleHandler.level = INFO
    # Set the default formatter for new ConsoleHandler instances
    java.util.logging.ConsoleHandler.formatter = com.orientechnologies.common.log.OAnsiLogFormatter

    # Set the default logging level for new FileHandler instances
    java.util.logging.FileHandler.level = INFO
    # Naming style for the output file
    java.util.logging.FileHandler.pattern=../log/orient-server.log
    # Set the default formatter for new FileHandler instances
    java.util.logging.FileHandler.formatter = com.orientechnologies.common.log.OLogFormatter
    # Limiting size of output file in bytes:
    java.util.logging.FileHandler.limit=10000000
    # Number of output files to cycle through, by appending an
    # integer to the base file name:
    java.util.logging.FileHandler.count=10
