apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.master.serviceName }}
  # labels could be a template function call
  labels:
    app: {{ .Values.master.labelValue }}
spec:
  ports:
  - port: {{ .Values.httpPort }}
    name: http
  - port: {{ .Values.binaryPort }}
    name: binary
  - port: {{ .Values.hazelcastPort }}
    name: hazelcast
  clusterIP: None
  selector:
    app: {{ .Values.master.labelValue }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.master.name }}
  labels:
    app: {{ .Values.master.labelValue }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.master.labelValue }}
  replicas: {{ .Values.master.replicas }}
  serviceName: {{ .Values.master.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.master.labelValue }}
        orientdb-cluster-member: "true"
    spec:
      serviceAccountName: hazelcast-k8s
      terminationGracePeriodSeconds: 30
      containers:
      - name: orientdb
        command: ["dserver.sh", "-DkubernetesNamespace=${testNamespace}"]
        image: ${orientdbDockerImage}
        imagePullPolicy: Always
        env:
        - name: ORIENTDB_NODE_NAME
          value: ${orientdbNodeName}
        ports:
        - containerPort: ${orientdbHttpPort}
          protocol: TCP
        - containerPort: ${orientdbBinaryPort}
          protocol: TCP
        - containerPort: ${orientdbHazelcastPort}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: ${orientdbBinaryPort}
          initialDelaySeconds: 15
          periodSeconds: 20
          failureThreshold: 5
        readinessProbe:
          tcpSocket:
            port: ${orientdbBinaryPort}
          initialDelaySeconds: 10
          periodSeconds: 20
          failureThreshold: 5
        volumeMounts:
        - name: databases
          mountPath: /orientdb/databases
        - name: config
          mountPath: /orientdb/config
      # At some point, it would be better to fix resources.
      #    resources:
      #      requests:
      #      limits:
      #
      # OrientDB needs the config files (at leaset server config) to be modifiable. Mounting directly from the configMap
      # would result in a read-only config folder which can crash the server.
      initContainers:
      - name: copy-configs
        image: busybox:1.31
        command: ['sh', '-c']
        args:
        - cp -v /orientdb-config/* /orientdb/config/
        volumeMounts:
        - name: config
          mountPath: /orientdb/config
        - name: orientdb-config-cm-vol
          mountPath: /orientdb-config
      volumes:
      - name: orientdb-config-cm-vol
        configMap:
          name: ${orientdbConfigCm}
  volumeClaimTemplates:
  - metadata:
      name: databases
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: ${databaseVolumeStorageClass}
      resources:
        requests:
          storage: ${databaseVolSize}Gi
  - metadata:
      name: config
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: ${configVolumeStorageClass}
      resources:
        requests:
          storage: 100Mi